on:
  push:
    branches:
      - main

jobs:
  test_back:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./back-end
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npx eslint .
      - name: Unit Tests
        run: npm run test:unit
      - name: Integration Tests
        run: npm run test:integration:deploy
    env:
      JWT_SECRET: ${{secrets.JWT_SECRET}}
      DATABASE_URL: ${{secrets.DATABASE_URL}}

  deploy_back:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./back-end
    needs: test_back
    steps:
      - uses: actions/checkout@v3
      - name: Build and Deploy API
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "desafio-native-back"
          heroku_email: "rafaelaugustscherer@gmail.com"
          usedocker: true
          stack: container
          appdir: "back-end"
    env:
      HD_JWT_SECRET: ${{secrets.JWT_SECRET}}
      HD_DATABASE_URL: ${{secrets.DB_CONNECTION_URI}}

  deploy_front:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front-end
    needs: deploy_back
    steps:
      - uses: actions/checkout@v3
      - name: Install ESLint dependencies
        run: npm install -D
      - name: Run ESLint
        run: npx eslint .
      - name: Build and Deploy Web App
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "desafio-native-front"
          heroku_email: "rafaelaugustscherer@gmail.com"
          usedocker: true
          stack: container
          appdir: "front-end"
          docker_build_args: |
            REACT_APP_SERVER
    env:
      REACT_APP_SERVER: ${{secrets.REACT_APP_SERVER}}
